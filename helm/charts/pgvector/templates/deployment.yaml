apiVersion: apps/v1
kind: Deployment
metadata:
  name: "pgvector"
spec:
  selector:
    matchLabels:
      app: "pgvector"
  replicas: 1
  template:
    metadata:
      labels:
        app: "pgvector"
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password | quote }}
            - name: POSTGRES_INITDB_ARGS
              value: {{ .Values.postgres.initdbArgs | quote }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.user | quote }}
                - -d
                - {{ .Values.postgres.database | quote }}
            initialDelaySeconds: {{ .Values.healthcheck.startPeriod | default "30s" | int }}
            periodSeconds: {{ .Values.healthcheck.interval | default "10s" | int }}
            timeoutSeconds: {{ .Values.healthcheck.timeout | default "5s" | int }}
            failureThreshold: {{ .Values.healthcheck.retries | default 5 }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data-claim