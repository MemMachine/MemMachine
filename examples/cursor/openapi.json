{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/v1/memories":{"post":{"summary":"Add Memory","description":"Adds a memory episode to both episodic and profile memory.\n\nThis endpoint first retrieves the appropriate episodic memory instance\nbased on the session context (group, agent, user, session IDs). It then\nadds the episode to the episodic memory. If successful, it also passes\nthe message to the profile memory for ingestion.\n\nArgs:\n    episode: The NewEpisode object containing the memory details.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.\n    HTTPException: 400 if the producer or produced_for IDs are invalid\n                   for the given context.","operationId":"add_memory_v1_memories_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewEpisode"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"summary":"Delete Session Data","description":"Delete data for a particular session","operationId":"delete_session_data_v1_memories_delete","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteDataRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/memories/episodic":{"post":{"summary":"Add Episodic Memory","description":"Adds a memory episode to both episodic memory.\n\nThis endpoint first retrieves the appropriate episodic memory instance\nbased on the session context (group, agent, user, session IDs). It then\nadds the episode to the episodic memory. If successful, it also passes\nthe message to the profile memory for ingestion.\n\nArgs:\n    episode: The NewEpisode object containing the memory details.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.\n    HTTPException: 400 if the producer or produced_for IDs are invalid\n                   for the given context.","operationId":"add_episodic_memory_v1_memories_episodic_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewEpisode"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/memories/profile":{"post":{"summary":"Add Profile Memory","description":"Adds a memory episode to both profile memory.\n\nThis endpoint first retrieves the appropriate episodic memory instance\nbased on the session context (group, agent, user, session IDs). It then\nadds the episode to the episodic memory. If successful, it also passes\nthe message to the profile memory for ingestion.\n\nArgs:\n    episode: The NewEpisode object containing the memory details.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.\n    HTTPException: 400 if the producer or produced_for IDs are invalid\n                   for the given context.","operationId":"add_profile_memory_v1_memories_profile_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewEpisode"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/memories/search":{"post":{"summary":"Search Memory","description":"Searches for memories across both episodic and profile memory.\n\nRetrieves the relevant episodic memory instance and then performs\nconcurrent searches in both the episodic memory and the profile memory.\nThe results are combined into a single response object.\n\nArgs:\n    q: The SearchQuery object containing the query and context.\n\nReturns:\n    A SearchResult object containing results from both memory types.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.","operationId":"search_memory_v1_memories_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchQuery"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResult"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/memories/episodic/search":{"post":{"summary":"Search Episodic Memory","description":"Searches for memories across both profile memory.\n\nArgs:\n    q: The SearchQuery object containing the query and context.\n\nReturns:\n    A SearchResult object containing results from episodic memory.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.","operationId":"search_episodic_memory_v1_memories_episodic_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchQuery"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResult"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/memories/profile/search":{"post":{"summary":"Search Profile Memory","description":"Searches for memories across profile memory.\n\nArgs:\n    q: The SearchQuery object containing the query and context.\n\nReturns:\n    A SearchResult object containing results from profile memory.\n\nRaises:\n    HTTPException: 404 if no matching episodic memory instance is found.","operationId":"search_profile_memory_v1_memories_profile_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchQuery"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResult"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/metrics":{"get":{"summary":"Metrics","operationId":"metrics_metrics_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/sessions":{"get":{"summary":"Get All Sessions","description":"Get all sessions","operationId":"get_all_sessions_v1_sessions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllSessionsResponse"}}}}}}},"/v1/users/{user_id}/sessions":{"get":{"summary":"Get Sessions For User","description":"Get all sessions for a particular user","operationId":"get_sessions_for_user_v1_users__user_id__sessions_get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllSessionsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/groups/{group_id}/sessions":{"get":{"summary":"Get Sessions For Group","description":"Get all sessions for a particular group","operationId":"get_sessions_for_group_v1_groups__group_id__sessions_get","parameters":[{"name":"group_id","in":"path","required":true,"schema":{"type":"string","title":"Group Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllSessionsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/agents/{agent_id}/sessions":{"get":{"summary":"Get Sessions For Agent","description":"Get all sessions for a particular agent","operationId":"get_sessions_for_agent_v1_agents__agent_id__sessions_get","parameters":[{"name":"agent_id","in":"path","required":true,"schema":{"type":"string","title":"Agent Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllSessionsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/health":{"get":{"summary":"Health Check","description":"Health check endpoint for container orchestration.","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AllSessionsResponse":{"properties":{"sessions":{"items":{"$ref":"#/components/schemas/MemorySession"},"type":"array","title":"Sessions"}},"type":"object","required":["sessions"],"title":"AllSessionsResponse","description":"Response model for listing all sessions."},"DeleteDataRequest":{"properties":{"session":{"$ref":"#/components/schemas/SessionData"}},"type":"object","required":["session"],"title":"DeleteDataRequest","description":"Request model for deleting all data for a session."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"MemorySession":{"properties":{"user_ids":{"items":{"type":"string"},"type":"array","title":"User Ids"},"session_id":{"type":"string","title":"Session Id"},"group_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Group Id"},"agent_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Agent Ids"}},"type":"object","required":["user_ids","session_id","group_id","agent_ids"],"title":"MemorySession","description":"Response model for session information."},"NewEpisode":{"properties":{"session":{"$ref":"#/components/schemas/SessionData"},"producer":{"type":"string","title":"Producer"},"produced_for":{"type":"string","title":"Produced For"},"episode_content":{"anyOf":[{"type":"string"},{"items":{"type":"number"},"type":"array"}],"title":"Episode Content"},"episode_type":{"type":"string","title":"Episode Type"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata"}},"type":"object","required":["session","producer","produced_for","episode_content","episode_type","metadata"],"title":"NewEpisode","description":"Request model for adding a new memory episode."},"SearchQuery":{"properties":{"session":{"$ref":"#/components/schemas/SessionData"},"query":{"type":"string","title":"Query"},"filter":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Filter"},"limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Limit"}},"type":"object","required":["session","query"],"title":"SearchQuery","description":"Request model for searching memories."},"SearchResult":{"properties":{"status":{"type":"integer","title":"Status","default":0},"content":{"additionalProperties":true,"type":"object","title":"Content"}},"type":"object","required":["content"],"title":"SearchResult","description":"Response model for memory search results."},"SessionData":{"properties":{"group_id":{"type":"string","title":"Group Id"},"agent_id":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Agent Id"},"user_id":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"User Id"},"session_id":{"type":"string","title":"Session Id"}},"type":"object","required":["group_id","agent_id","user_id","session_id"],"title":"SessionData","description":"Request model for session information."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}